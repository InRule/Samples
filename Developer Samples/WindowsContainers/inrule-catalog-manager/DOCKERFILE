# escape=`
ARG imageRepos='inrule'
ARG baseImageTag
# for using non-docker hub base images, e.g., mycontainerregistry.azurecr.io/inrule
FROM ${imageRepos}/inrule-server:${baseImageTag}

EXPOSE 80:80
EXPOSE 443:443

LABEL	maintainer="jelster@inrule.com" `
		vendor="InRule Technology, Inc." `
        com.inrule.version="${reposTag}" `
        com.inrule.product="Web Catalog Manager"`
        com.inrule.product.flavor="AppServices"
     
ARG reposTag
ENV catManDir=c:\inrule-catalog-manager
ENV InRule:Catalog:Uri=http://cat/Service.svc
WORKDIR C:\assets\

ADD https://github.com/InRule/AzureAppServices/releases/download/${reposTag}/InRule.Catalog.Manager.Web.zip c:\assets

RUN MD $env:catManDir;`
    Expand-Archive -Path .\InRule.Catalog.Manager.Web.zip -Destination $env:catManDir;`
    Remove-Item .\InRule.Catalog.Manager.Web.zip;


WORKDIR c:\temp
COPY *.ps1 .\

RUN $acl = Get-Acl -AllCentralAccessPolicies -Path c:\inetpub\wwwroot;`
    (gci ${catManDir} -Recurse) | foreach { Set-Acl -Path $_.FullName -AclObject $acl -ErrorAction SilentlyContinue };`
    Import-Module "WebAdministration";`
    set-itemproperty -path 'IIS:\Sites\Default Web Site' -Name physicalPath -Value $env:catManDir

ENTRYPOINT ["C:\\LogMonitor\\LogMonitor.exe", "powershell.exe", ".\\Set-CatalogManagerConfig.ps1 -verbose;"]
# HACK to add new appSettings configuration until environment variable support is added
# TODO: move CMD to base image
CMD ["C:\\LogMonitor\\ServiceMonitor.exe", "w3svc"];