parameters:
- name: inRuleReleaseTag
  type: string
  default: 'v5.5.1'

trigger:
- master

resources:
- repo: self

variables:
  ${{ if ne(variables['Build.SourceBranchName'], 'master')}}:
    imageTags: '$(Build.SourceBranchName)-$(Build.BuildId)'
  inRuleReleaseTag: ${{ parameters.inRuleReleaseTag }}

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Buildltsc2016
    displayName: Build LTSC2016
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: PowerShell@2
      displayName: Run build script
      inputs:
        filePath: '$(Build.SourcesDirectory)\Developer Samples\WindowsContainers\Invoke-ContainerBuild.ps1'
        arguments: '-inRuleReleaseTag $(inRuleReleaseTag) -imageTags $(imageTags) -windowsServiceReleasesToUse ltsc2016'
        failOnStderr: true
        pwsh: true
        workingDirectory: '$(Build.SourcesDirectory)\Developer Samples\WindowsContainers'
    - task: Powershell@2
      displayName: Populate variable with tag list from build output      
      inputs:
        targetType: 'inline'
        script: |
          write-host "##vso[task.setvariable variable=imageTagsToPush]$(gc "$env:Build_SourcesDirectory\Developer Samples\WindowsContainers\tags-built.txt")"
    - task: Docker@2 
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) 
      inputs:
        containerRegistry: 'InRuleBuilds Docker Hub'
        command: 'push'
        tags: '$(imageTagsToPush)'
  - job: Buildltsc2019
    displayName: Build LTSC2019
    pool:
      vmImage: 'windows-2019'
    steps:
    - task: PowerShell@2
      displayName: Run build script
      inputs:
        filePath: '$(Build.SourcesDirectory)\Developer Samples\WindowsContainers\Invoke-ContainerBuild.ps1'
        arguments: '-inRuleReleaseTag $(inRuleReleaseTag) -imageTags $(imageTags) -windowsServiceReleasesToUse ltsc2019'
        failOnStderr: true
        pwsh: true
        workingDirectory: '$(Build.SourcesDirectory)\Developer Samples\WindowsContainers'
    - task: Powershell@2
      displayName: Populate variable with tag list from build output      
      inputs:
        targetType: 'inline'
        script: |
          write-host "##vso[task.setvariable variable=imageTagsToPush]$(gc "$env:Build_SourcesDirectory\Developer Samples\WindowsContainers\tags-built.txt")"
    - task: Docker@2 
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master')) 
      inputs:
        containerRegistry: 'InRuleBuilds Docker Hub'
        command: 'push'
        tags: '$(imageTagsToPush)'
